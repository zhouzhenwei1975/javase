package net.zzw.javase.foundational.operator.bit;

/**
 * 按位异或的使用
 *
 * @author zzw dgzzw1@163.com
 * @version 2021/12/12 下午3:12
 * @since JDK11
 */
public class BitXorOperator {
	public static void main(String[] args) {
		// 按位异或(^): ^左右两边的**二进制补码**相同为0，不同为1

		/*
			计算过程
			256 默认是四个字节的内存，在内存中的二进制补码表示为	0000 0000 0000 0000 0000 0001 0000 0000
			256	默认是四个字节的内存，在内存中的二进制补码表示为 0000 0000 0000 0000 0000 0001 0000 0000
			0000 0000 0000 0000 0000 0001 0000 0000
		  ^	0000 0000 0000 0000 0000 0001 0000 0000
		  = 0000 0000 0000 0000 0000 0000 0000 0000 转换成十进制原码是输出是:0
		 */
		System.out.println("256 ^ 256 = " + (256 ^ 256));
	}
}
